name: QQNT-version-scraper

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  scrape_and_release:
    runs-on: ubuntu-latest

    steps:
      - name: 检出代码 ⬇️
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置 Node.js ⚙️
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: 安装依赖 📦
        run: npm install cheerio

      - name: 显示当前工作目录 📂 (Debug)
        run: pwd

      - name: 列出 scripts/QQNT-version-scraper 目录内容 📂 (Debug)
        run: ls -l ./scripts/QQNT-version-scraper/

      - name: 创建 QQNT 目录 📂 (Debug mkdir)
        run: |
          mkdir -p ./scripts/QQNT-version-scraper/QQNT
          echo "目录创建命令执行完毕"
          ls -l ./scripts/QQNT-version-scraper/ # 再次列出目录内容，确认创建结果

      - name: 运行版本抓取脚本 🚀
        id: run_scraper_script  # 添加步骤 ID
        run: node ./scripts/QQNT-version-scraper/index.js

      - name: 检查版本更新 🔍
        id: check_update
        run: |
          if [[ -f ./scripts/QQNT-version-scraper/QQNT/versions.json ]]; then
            NEW_VERSION=$(cat ./scripts/QQNT-version-scraper/QQNT/versions.json)
            OLD_VERSION=$(git show origin/main:./scripts/QQNT-version-scraper/QQNT/versions.json)

            if [[ "$NEW_VERSION" == "$OLD_VERSION" ]]; then
              echo "版本没有更新，跳过发布。"
              echo "updated=false" >> "$GITHUB_OUTPUT"
            else
              echo "检测到版本更新！"
              echo "updated=true" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "未找到 versions.json，首次运行，将发布 Release。"
            echo "updated=true" >> "$GITHUB_OUTPUT"
          fi

      - name: 提交版本文件 ➕
        if: steps.check_update.outputs.updated == 'true'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add ./scripts/QQNT-version-scraper/QQNT/versions.json ./scripts/QQNT-version-scraper/QQNT/versions.md
          git commit -m "✨ 更新 QQNT 版本信息"
          git push

      - name: 创建 Release 🏷️
        if: steps.check_update.outputs.updated == 'true'
        uses: softprops/action-gh-release@v1
        with:
          name: QQNT-${{ steps.run_scraper_script.outputs.windows_version }}  # 使用 output
          body_path: ./scripts/QQNT-version-scraper/QQNT/versions.md
          tag_name: QQNT-${{ steps.run_scraper_script.outputs.windows_version }} # 使用 output
          generate_release_notes: false
          files: |
            ./scripts/QQNT-version-scraper/QQNT/versions.json
            ./scripts/QQNT-version-scraper/QQNT/versions.md
