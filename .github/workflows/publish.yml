name: Publish Package and Heartbeat

on:
  push:
    branches:
      - main  # 触发条件，推送到 main 分支时
  schedule:
    - cron: '0 * * * *'  # 每小时的第0分钟触发心跳提交

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'  # 使用 Node.js 22

      - name: 检查 package.json
        id: check_package_json
        run: |
          if [ ! -f ./publish/package.json ]; then
            echo "未在 publish 目录中找到 package.json，工作流将结束。"
            echo "package_json_exists=false" >> $GITHUB_ENV
          else
            echo "package_json_exists=true" >> $GITHUB_ENV
          fi

      - name: 安装依赖
        if: env.package_json_exists == 'true'  # 只有在存在 package.json 时才执行
        working-directory: ./publish  # 指定工作目录为 publish 文件夹
        run: npm install

      - name: 登录 NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
        
      - name: 验证 NPM Token
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}  # 使用 GitHub Secrets 存储 NPM Token

      - name: 发布包
        if: env.package_json_exists == 'true'  # 只有在存在 package.json 时才执行
        working-directory: ./publish  # 指定工作目录为 publish 文件夹
        run: |
          if npm publish; then
            echo "包发布成功"
          else
            echo "包发布失败：版本号可能已存在或其他错误"
            exit 1  # 退出以标记工作流为失败
          fi

      - name: 清理
        if: env.package_json_exists == 'true'  # 只有在存在 package.json 时才执行
        run: |
          rm -rf ./publish/**/*  # 删除 publish 文件夹下的所有内容，但保留文件夹

      - name: 提交并推送清理更改
        if: env.package_json_exists == 'true'  # 只有在存在 package.json 时才执行
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add -f ./publish/* ./publish/lib ./publish/dist ./publish/data  # 强制添加指定文件 用于发布npm
          git commit -m "清理 publish 文件夹"
          git push


  heartbeat:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'  # 仅在定时触发时执行

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: 心跳提交
        run: |
          git config --local user.email "1919892171@qq.com"
          git config --local user.name "shangxueink"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git stash
          git reset --hard
          git pull --rebase
          git commit --allow-empty -m "小学还在维护此仓库哦~"
          git push
